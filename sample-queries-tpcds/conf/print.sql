set ambari.hive.db.schema.name;
set fs.file.impl.disable.cache;
set fs.hdfs.impl.disable.cache;
set hive.auto.convert.join.noconditionaltask;
set hive.auto.convert.join;
set hive.auto.convert.sortmerge.join;
set hive.compactor.abortedtxn.threshold;
set hive.compactor.check.interval;
set hive.compactor.delta.num.threshold;
set hive.compactor.delta.pct.threshold;
set hive.compactor.initiator.on;
set hive.compactor.worker.threads;
set hive.compactor.worker.timeout;
set hive.compute.query.using.stats;
set hive.enforce.bucketing;
set hive.enforce.sorting;
set hive.enforce.sortmergebucketmapjoin;
set hive.execution.engine;
set hive.limit.pushdown.memory.usage;
set hive.map.aggr;
set hive.mapjoin.bucket.cache.size;
set hive.mapred.reduce.tasks.speculative.execution;
set hive.metastore.cache.pinobjtypes;
set hive.metastore.client.socket.timeout;
set hive.metastore.execute.setugi;
set hive.metastore.warehouse.dir;
set hive.optimize.bucketmapjoin.sortedmerge;
set hive.optimize.bucketmapjoin;
set hive.optimize.index.filter;
set hive.optimize.reducededuplication.min.reducer;
set hive.optimize.reducededuplication;
set hive.orc.splits.include.file.footer;
set hive.security.authorization.enabled;
set hive.security.metastore.authorization.manager;
set hive.server2.enable.doAs;
set hive.server2.tez.default.queues;
set hive.server2.tez.initialize.default.sessions;
set hive.server2.tez.sessions.per.default.queue;
set hive.stats.autogather;
set hive.tez.input.format;
set hive.txn.manager;
set hive.txn.max.open.batch;
set hive.txn.timeout;
set hive.vectorized.execution.enabled;
set hive.vectorized.groupby.checkinterval;
set hive.vectorized.groupby.flush.percent;
set hive.vectorized.groupby.maxentries;

-- These values need to be tuned appropriately to your cluster. These examples are for reference.
-- set hive.tez.container.size;
-- set hive.tez.java.opts;
-- set hive.auto.convert.join.noconditionaltask.size;

--exec engine and optimizer
set hive.execution.engine;
set hive.cbo.enable;
set hive.stats.fetch.partition.stats;
set hive.script.operator.truncate.env;
set hive.compute.query.using.stats;
set hive.vectorized.execution.enabled;
set hive.vectorized.execution.reduce.enabled;
set hive.stats.autogather;
--input output
set mapreduce.input.fileinputformat.split.minsize;
set mapreduce.input.fileinputformat.split.maxsize;
set hive.exec.reducers.bytes.per.reducer;
set hive.exec.reducers.max;
set hive.exec.parallel;
set hive.exec.parallel.thread.number;
set hive.exec.compress.intermediate;
set hive.exec.compress.output;
set mapred.map.output.compression.codec;
set mapred.output.compression.codec;
set hive.default.fileformat;
--join optimizations
set hive.auto.convert.sortmerge.join;
set hive.auto.convert.sortmerge.join.noconditionaltask;
set hive.optimize.bucketmapjoin;
set hive.optimize.bucketmapjoin.sortedmerge;
set hive.auto.convert.join.noconditionaltask.size;
set hive.auto.convert.join;
set hive.optimize.mapjoin.mapreduce;
set hive.mapred.local.mem;
set hive.mapjoin.smalltable.filesize;
set hive.mapjoin.localtask.max.memory.usage;
set hive.optimize.skewjoin;
set hive.optimize.skewjoin.compiletime;
-- filter optimizations (predicate pushdown to storage level)
set hive.optimize.ppd;
set hive.optimize.ppd.storage;
set hive.ppd.recognizetransivity;
set hive.optimize.index.filter;
--other
set hive.optimize.sampling.orderby;
set hive.optimize.sampling.orderby.number;
set hive.optimize.sampling.orderby.percent;
set mapreduce.job.reduces;
set hive.cbo.enable;
set hive.stats.autogather;
set hive.stats.fetch.column.stats;
set hive.compute.query.using.stats;
set mapreduce.reduce.java.opts;
set mapreduce.reduce.memory.mb;
set mapreduce.map.memory.mb;
set mapreduce.map.java.opts;
